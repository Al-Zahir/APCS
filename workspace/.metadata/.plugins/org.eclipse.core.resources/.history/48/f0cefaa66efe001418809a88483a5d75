package com.Zeditude.APCompFinal;

import java.util.ArrayList;
import java.util.List;

import android.widget.Toast;

public class AI {
	public List<Node> start;
	
	public AI(Board b, Team t){
		start = new ArrayList<Node>();
		Piece[][] board = b.getBoard();
		
		Piece[][] newBoard = new Piece[board.length][board[0].length];
		
		for(int r = 0; r < newBoard.length; r++)
			for(int c = 0; c < newBoard[r].length; c++)
				newBoard[r][c] = new Piece(board[r][c]);
		
		for(int r = 0; r < newBoard.length; r++){
			for(int c = 0; c < newBoard[r].length; c++){
				if(newBoard[r][c].getColor() == t){
					Piece p = new Piece(newBoard[r][c]);
					List<Location> loc = p.getMoveLoc();
					for(Location l : loc)
						start.add(createNode(new Board(newBoard, t), p, r, c, l, t));
				}
			}
		}
	}
	
	private Node createNode(Board board, Piece p, int r, int c, Location l,
			Team t) {
		Piece[][] currentBoard = board.getBoard();
		
		Piece[][] newBoard = new Piece[currentBoard.length][currentBoard[0].length];
		
		for(int r = 0; r < newBoard.length; r++)
			for(int c = 0; c < newBoard[r].length; c++)
				newBoard[r][c] = new Piece(board[r][c]);
		
		currentBoard[l.getRow()][l.getCol()] = p;
		currentBoard[r][c] = new Piece();
		
		Team op = (t == Team.WHITE) ? Team.BLACK : Team.WHITE;
		
		return new Node(new Board(currentBoard, op));
	}

	public Piece[][] getBoard(){
		return start.get(0).getBoard().getBoard();
	}
}
